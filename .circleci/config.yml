ACR_DOCKER_AUTH_MASTER: &ACR_DOCKER_AUTH
  image: ${AZURE_LOGIN_SERVER_NAME}/she/circleci-build-image
  auth:
    username: ${ACR_REGISTRY_NAME}
    password: ${ACR_PASSWORD}

DOCKER_BUILD_AND_PUSH_PARAMETERS_MASTER: &DOCKER_BUILD_AND_PUSH_PARAMETERS
  image: ${ACR_REPO_BASE}/dhos-hapi-fhir-api
  registry: ${AZURE_LOGIN_SERVER_NAME}
  tag: dev,cb-${CIRCLE_BUILD_NUM},$(git log --pretty=format:'%h' -n 1)

version: 2.1
orbs:
  azure-acr: circleci/azure-acr@0.1.4
  maven: circleci/maven@1.1
  docker: circleci/docker@2.2.0
commands:
  acr-login:
    description: Authenticate into Azure Container Registry service
    steps:
      - run:
          name: Auth with ACR
          command: az acr login -n $ACR_REGISTRY_NAME -u $AZURE_USERNAME -p $AZURE_PASSWORD
jobs:

  verify:
    docker:
    - image: circleci/openjdk:stretch
    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-maven-dependencies-{{ checksum "pom.xml" }}
        - v1-maven-dependencies-
    - run:
        name: Verify and run HAPI FHIR integration tests
        command: mvn clean verify -f "pom.xml"
    - store_test_results:
        path: target/failsafe-reports
    - save_cache:
        paths:
        - ~/.m2
        key: v1-maven-dependencies-{{ checksum "pom.xml" }}

  sonarqube:
    docker:
    - image: circleci/openjdk:stretch
    steps:
    - checkout
    - attach_workspace:
        at: coverage-reports
    - restore_cache:
        keys:
        - v1-maven-dependencies-{{ checksum "pom.xml" }}
        - v1-maven-dependencies-
    - restore_cache:
        keys:
        - v1-maven-sonar-{{ checksum "pom.xml" }}
        - v1-maven-sonar-
    - run:
        name: Run sonarqube
        command: .circleci/run_sonarqube.sh
    - save_cache:
        key: v1-maven-sonar-{{ checksum "pom.xml" }}
        paths:
        - .sonar/cache

  deploy-dev:
    docker:
    - <<: *ACR_DOCKER_AUTH
    environment:
      K8S_DEV_DEPLOYMENT_NAME: deployment/dhos-hapi-fhir-api-dep
      ACR_REPO_BASE: dhos
    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Add build information
        command: .circleci/record_build_info.sh
    - acr-login
    - docker/build:
        step-name: Build Docker image for ACR
        <<: *DOCKER_BUILD_AND_PUSH_PARAMETERS
    - docker/push:
        step-name: Push Docker image to ACR
        <<: *DOCKER_BUILD_AND_PUSH_PARAMETERS

workflows:
  version: 2
  build_test_deploy:
    jobs:
    - verify:
        context: engineering-build
#    - sonarqube:
#        context: engineering-build
#        requires:
#        - verify
    - deploy-dev:
        context: engineering-build
        requires:
        - verify
        filters:
          branches:
            only:
            - develop
